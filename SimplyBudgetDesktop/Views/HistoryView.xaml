<UserControl
  x:Class="SimplyBudget.Views.HistoryView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:data="clr-namespace:SimplyBudgetShared.Data;assembly=SimplyBudgetShared"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:utilities="clr-namespace:SimplyBudget.Utilities"
  xmlns:vm="clr-namespace:SimplyBudget.ViewModels"
  d:DataContext="{d:DesignInstance Type=vm:HistoryViewModel}"
  d:DesignHeight="450"
  d:DesignWidth="800"
  mc:Ignorable="d">
  <Grid Grid.IsSharedSizeScope="True">
    <Grid.InputBindings>
      <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
    </Grid.InputBindings>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition />
    </Grid.RowDefinitions>

    <Expander
      Padding="0"
      materialDesign:ExpanderAssist.HorizontalHeaderPadding="0"
      ExpandDirection="Down">
      <Expander.Style>
        <Style BasedOn="{StaticResource {x:Type Expander}}" TargetType="Expander">
          <Style.Triggers>
            <Trigger Property="IsExpanded" Value="False">
              <Setter Property="Header">
                <Setter.Value>
                  <TextBlock
                    Margin="10,0"
                    FontStyle="Italic"
                    FontWeight="Medium"
                    Text="{Binding FilterDisplay}" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </Style.Triggers>
        </Style>
      </Expander.Style>
      <Expander.Header>
        <Border Height="20" Background="Transparent" />
      </Expander.Header>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition Width="Auto" MinWidth="150" />
          <ColumnDefinition Width="Auto" MinWidth="120" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <ItemsControl
          Margin="3"
          VerticalAlignment="Center"
          ItemsSource="{Binding FilterCategories}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>

          <ItemsControl.ItemTemplate>
            <DataTemplate DataType="{x:Type data:ExpenseCategory}">
              <materialDesign:Chip
                Content="{Binding Name}"
                DeleteCommand="{Binding DataContext.RemoveFilterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}"
                DeleteCommandParameter="{Binding}"
                IsDeletable="True" />
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>

        <TextBox
          Grid.Column="1"
          Margin="5,0"
          VerticalAlignment="Center"
          materialDesign:HintAssist.Hint="Search"
          Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}">
          <TextBox.InputBindings>
            <KeyBinding Key="Return" Command="{Binding DoSearchCommand}" />
          </TextBox.InputBindings>
        </TextBox>

        <ComboBox
          Grid.Column="2"
          VerticalAlignment="Center"
          materialDesign:HintAssist.Hint="Add Filter"
          DisplayMemberPath="Name"
          IsEditable="True"
          ItemsSource="{Binding ExpenseCategories}"
          SelectedItem="{Binding SelectedCategory, UpdateSourceTrigger=PropertyChanged}">
          <ComboBox.InputBindings>
            <KeyBinding
              Key="Return"
              Command="{Binding AddFilterCommand}"
              CommandParameter="{Binding SelectedCategory}" />
          </ComboBox.InputBindings>
        </ComboBox>

        <Button
          Grid.Column="3"
          Padding="5,0"
          VerticalAlignment="Center"
          Command="{Binding AddFilterCommand}"
          CommandParameter="{Binding SelectedCategory}"
          Content="{materialDesign:PackIcon Kind=Add}"
          Style="{StaticResource MaterialDesignFlatButton}" />

        <ComboBox
          Grid.Column="4"
          Margin="5,0"
          VerticalAlignment="Center"
          DisplayMemberPath="Name"
          ItemsSource="{Binding Accounts}"
          SelectedItem="{Binding SelectedAccount, Delay=500}" />
      </Grid>

    </Expander>

    <Grid Grid.Row="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition
          Width="Auto"
          MinWidth="100"
          SharedSizeGroup="Date" />
        <ColumnDefinition
          Width="Auto"
          MinWidth="200"
          SharedSizeGroup="Amount" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" SharedSizeGroup="AccountAmount" />
      </Grid.ColumnDefinitions>

      <TextBlock Margin="10,0" Text="Date" />
      <TextBlock
        Grid.Column="1"
        Margin="10,0"
        Text="Amount" />
      <TextBlock
        Grid.Column="2"
        Margin="10,0"
        Text="Description" />
      <TextBlock
        Grid.Column="3"
        Margin="10,0"
        Text="{Binding SelectedAccount.Name, StringFormat='{}{0} Amount'}" />

    </Grid>
    <Separator
      Grid.Row="2"
      Margin="0,10"
      VerticalAlignment="Bottom" />
    <ListBox
      x:Name="HistoryListView"
      Grid.Row="3"
      materialDesign:DataGridAssist.ColumnHeaderPadding="2,1"
      ItemsSource="{Binding Items}"
      VirtualizingPanel.ScrollUnit="Pixel">
      <ListBox.CommandBindings>
        <CommandBinding Command="{x:Static ApplicationCommands.Delete}" Executed="DeleteSelectedHistoryItemExecuted" />
      </ListBox.CommandBindings>
      <ListBox.ContextMenu>
        <ContextMenu>
          <MenuItem Command="{x:Static ApplicationCommands.Delete}" Header="_Delete" />
        </ContextMenu>
      </ListBox.ContextMenu>
      <ListBox.ItemContainerStyle>
        <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
          <Setter Property="utilities:AttachedProperties.DoubleClickCommandParameter" Value="{Binding}" />
          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
      </ListBox.ItemContainerStyle>

      <ListBox.ItemTemplate>
        <DataTemplate DataType="{x:Type vm:BudgetHistoryViewModel}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" SharedSizeGroup="Date" />
              <ColumnDefinition Width="Auto" SharedSizeGroup="Amount" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" SharedSizeGroup="AccountAmount" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Text="{Binding Date, StringFormat='d'}" />
            <TextBlock
              Grid.Column="1"
              Margin="15,0"
              Text="{Binding DisplayAmount}">
              <TextBlock.Style>
                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding Type}" Value="{x:Static vm:BudgetHistoryViewModelType.Transfer}">
                      <Setter Property="HorizontalAlignment" Value="Center" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="{x:Static vm:BudgetHistoryViewModelType.Transaction}">
                      <Setter Property="HorizontalAlignment" Value="Right" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </TextBlock.Style>
            </TextBlock>
            <TextBlock Grid.Column="2" Text="{Binding Description}" />
            <TextBlock
              Grid.Column="3"
              HorizontalAlignment="Right"
              Text="{Binding CurrentAmount, Converter={StaticResource CurrentValueConverter}}">
              <TextBlock.Style>
                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding CurrentAmount}" Value="0">
                      <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </TextBlock.Style>
            </TextBlock>

            <ItemsControl
              Grid.Row="1"
              Grid.ColumnSpan="4"
              Margin="0,5,0,0"
              ItemsSource="{Binding Details}">
              <ItemsControl.Style>
                <Style TargetType="ItemsControl">
                  <Setter Property="Visibility" Value="Collapsed" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                      <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </ItemsControl.Style>

              <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:BudgetHistoryDetailsViewModel}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" SharedSizeGroup="Date" />
                      <ColumnDefinition Width="Auto" SharedSizeGroup="Amount" />
                      <ColumnDefinition SharedSizeGroup="Description" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                      Grid.Column="1"
                      Margin="14,2,0,0"
                      Text="{Binding Amount}" />
                    <TextBlock Grid.Column="2" Text="{Binding ExpenseCategoryName}" />
                  </Grid>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </Grid>
        </DataTemplate>
      </ListBox.ItemTemplate>
    </ListBox>
  </Grid>
</UserControl>
