<UserControl
    x:Class="SimplyBudget.Views.ImportView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:SimplyBudget.ViewModels"
    d:DataContext="{d:DesignInstance Type={x:Type vm:ImportViewModel}}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <CheckBox
                x:Name="ShowAll"
                Grid.Column="0"
                Margin="10,2"
                Content="Show all" />


            <TextBlock
                Grid.Column="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Text="{Binding SelectedAmount, Converter={StaticResource CurrentValueConverter}, StringFormat='Total {0}'}"
                Visibility="{Binding IsViewingCsv, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />

            <Button
                Grid.Column="2"
                Margin="10,2"
                Command="{Binding ImportCommand}"
                Content="Import"
                Visibility="{Binding IsViewingCsv, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Button
                Grid.Column="3"
                MinWidth="80"
                Margin="10,2"
                Command="{Binding AddItemCommand}"
                Content="Add"
                Visibility="{Binding IsViewingCsv, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
            <ToggleButton
                x:Name="Toggle"
                Grid.Column="4"
                Margin="10,2"
                IsChecked="{Binding IsViewingCsv}" />
        </Grid>

        <TextBox
            Margin="2,4"
            Padding="4"
            VerticalContentAlignment="Stretch"
            materialDesign:HintAssist.Hint="CSV Data"
            AcceptsReturn="True"
            AllowDrop="True"
            Drop="OnDrop"
            PreviewDragOver="TextBox_PreviewDragOver"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            Style="{StaticResource MaterialDesignOutlinedTextBox}"
            Text="{Binding CsvData}" />

        <DataGrid
            x:Name="DataGrid"
            AutoGenerateColumns="False"
            IsReadOnly="True"
            ItemsSource="{Binding ImportedRecords}"
            ScrollViewer.CanContentScroll="False"
            SelectionMode="Extended"
            SelectionUnit="FullRow"
            Visibility="{Binding IsViewingCsv, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
            <DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" />
                <MouseBinding Command="{Binding AddItemCommand}" MouseAction="LeftDoubleClick" />
            </DataGrid.InputBindings>
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="DataGridRow">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsDone}" Value="True" />
                                <Condition Binding="{Binding IsChecked, ElementName=ShowAll}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsDone}" Value="True" />
                                <Condition Binding="{Binding IsChecked, ElementName=ShowAll}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.5" />
                            <Setter Property="FontStyle" Value="Italic" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn
                    Binding="{Binding Date, StringFormat='d', Mode=OneTime}"
                    Header="Date"
                    SortMemberPath="Date" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Description, Mode=OneTime}"
                    Header="Description" />
                <DataGridTextColumn
                    MinWidth="150"
                    Binding="{Binding Item, Converter={StaticResource CurrentValueConverter}, Mode=OneTime}"
                    Header="Amount"
                    SortMemberPath="Amount" />
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding MarkAsDoneCommand}" Header="Mark Done" />
                    <MenuItem Command="{Binding UnmarkAsDoneCommand}" Header="Mark Not Done" />
                    <Separator />
                    <MenuItem Command="{Binding DeleteCommand}" Header="Delete" />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
    </Grid>
</UserControl>
