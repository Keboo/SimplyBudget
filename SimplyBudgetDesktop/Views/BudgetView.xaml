<UserControl x:Class="SimplyBudget.Views.BudgetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:utilities="clr-namespace:SimplyBudget.Utilities"
             xmlns:vm="clr-namespace:SimplyBudget.ViewModels"
             xmlns:valueConverter="clr-namespace:SimplyBudget.ValueConverter"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:i="http://schemas.microsoft.com/xaml/behaviors" xmlns:behaviors="clr-namespace:SimplyBudget.Behaviors"
             d:DataContext="{d:DesignInstance Type=vm:BudgetViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
  <UserControl.Resources>
    <DataTemplate x:Key="DefaultCategoryTemplate" DataType="{x:Type vm:ExpenseCategoryViewModelEx}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition SharedSizeGroup="Name"/>
          <ColumnDefinition SharedSizeGroup="Budget"/>
          <ColumnDefinition SharedSizeGroup="Balance"/>
          <ColumnDefinition SharedSizeGroup="Expesnses"/>
          <ColumnDefinition SharedSizeGroup="Allocations"/>
          <ColumnDefinition SharedSizeGroup="ThreeMonthAvg"/>
          <ColumnDefinition SharedSizeGroup="SixMonthAvg"/>
          <ColumnDefinition SharedSizeGroup="TwelveMonthAvg"/>
        </Grid.ColumnDefinitions>
        <TextBlock Margin="0,0,10,0">
          <TextBlock.Style>
            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
              <Setter Property="Text">
                <Setter.Value>
                  <MultiBinding StringFormat="{}{0} ({1})">
                    <Binding Path="Name" />
                    <Binding Path="Cap" Converter="{StaticResource CurrentValueConverter}" />
                  </MultiBinding>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <DataTrigger Binding="{Binding Cap}" Value="{x:Null}">
                  <Setter Property="Text" Value="{Binding Name}" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </TextBlock.Style>
        </TextBlock>
        <TextBlock Text="{Binding BudgetedAmountDisplay}" Margin="0,0,10,0" Grid.Column="1"
                   Visibility="{Binding IsChecked, ElementName=ShowBudgettedAmountCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <TextBlock Text="{Binding Balance, Converter={StaticResource CurrentValueConverter}}" Margin="0,0,10,0" Grid.Column="2"
                   Visibility="{Binding IsChecked, ElementName=ShowCurrentAmountCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}">
          <TextBlock.Style>
            <Style TargetType="TextBlock">
              <Style.Triggers>
                <DataTrigger Binding="{Binding Balance, Converter={valueConverter:IsNegativeValueConverter}}" Value="True">
                  <Setter Property="Foreground" Value="{StaticResource ErrorBrush}"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </TextBlock.Style>
        </TextBlock>
        <TextBlock Text="{Binding MonthlyExpenses, Converter={StaticResource CurrentValueConverter}}" Margin="0,0,10,0" Grid.Column="3"
                   Visibility="{Binding IsChecked, ElementName=ShowMonthlyExpensesCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}">
          <TextBlock.Style>
            <Style TargetType="TextBlock">
              <Style.Triggers>
                <DataTrigger Value="True" Binding="{Binding Converter={valueConverter:ExpenseCategoryMonthlyExpensesExceeded}}">
                  <Setter Property="Foreground" Value="{StaticResource WarningBrush}"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </TextBlock.Style>
        </TextBlock>
        <TextBlock Text="{Binding MonthlyAllocations, Converter={StaticResource CurrentValueConverter}}" Grid.Column="4"
                   Visibility="{Binding IsChecked, ElementName=ShowMonthlyAllocationsCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}">
          <TextBlock.Style>
            <Style TargetType="TextBlock">
              <Style.Triggers>
                <DataTrigger Binding="{Binding Converter={valueConverter:ExpenseCategoryBudgettedAmountReachedValueConverter}}" Value="0">
                  <Setter Property="Foreground" Value="{StaticResource IgnoreBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Converter={valueConverter:ExpenseCategoryBudgettedAmountReachedValueConverter}}" Value="1">
                  <Setter Property="Foreground" Value="{StaticResource WarningBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Converter={valueConverter:ExpenseCategoryBudgettedAmountReachedValueConverter}}" Value="-1">
                  <Setter Property="Foreground" Value="{StaticResource ErrorBrush}"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </TextBlock.Style>
        </TextBlock>
        <TextBlock Text="{Binding ThreeMonthAverage, Converter={StaticResource CurrentValueConverter}}" Margin="0,0,10,0" Grid.Column="5"
                   Visibility="{Binding IsChecked, ElementName=ThreeMonthAverageCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <TextBlock Text="{Binding SixMonthAverage, Converter={StaticResource CurrentValueConverter}}" Margin="0,0,10,0" Grid.Column="6"
                   Visibility="{Binding IsChecked, ElementName=SixMonthAverageCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <TextBlock Text="{Binding TwelveMonthAverage, Converter={StaticResource CurrentValueConverter}}" Margin="0,0,10,0" Grid.Column="7"
                   Visibility="{Binding IsChecked, ElementName=TwelveMonthAverageCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="EditingCategoryTemplate" DataType="{x:Type vm:ExpenseCategoryViewModelEx}">
      <GroupBox Header="Edit Category" Background="{DynamicResource MaterialDesignPaper}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <TextBox materialDesign:HintAssist.Hint="Name" 
                             materialDesign:HintAssist.IsFloating="True" 
                             Text="{Binding EditingName}">
            <i:Interaction.Behaviors>
              <behaviors:SelectAllOnFocusBehavior />
            </i:Interaction.Behaviors>
          </TextBox>
          <Grid Margin="5,0" Grid.Column="1" VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <RadioButton Content="Amount" IsChecked="{Binding EditIsAmountType}"/>
            <RadioButton Content="Percentage" IsChecked="{Binding EditIsAmountType, Converter={StaticResource InvertBoolValueConverter}}" Grid.Row="1"/>
            <TextBox MinWidth="100" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" 
                                 VerticalAlignment="Bottom"
                                 materialDesign:HintAssist.IsFloating="True"
                                 Margin="5,0">
              <i:Interaction.Behaviors>
                <behaviors:SelectAllOnFocusBehavior />
              </i:Interaction.Behaviors>
              <TextBox.Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                  <Setter Property="Text" Value="{Binding EditAmount, Converter={StaticResource PercentageValueConverter}}" />
                  <Setter Property="materialDesign:HintAssist.Hint" Value="Percentage" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding EditIsAmountType}" Value="True">
                      <Setter Property="Text" Value="{Binding EditAmount, Converter={StaticResource CurrentValueConverter}}" />
                      <Setter Property="materialDesign:HintAssist.Hint" Value="Amount" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </TextBox.Style>
            </TextBox>
          </Grid>
          <TextBox materialDesign:HintAssist.Hint="Cap" 
                   materialDesign:HintAssist.IsFloating="True" 
                   Text="{Binding EditingCap, Converter={StaticResource CurrentValueConverter}}"
                   Grid.Column="2"
                   Margin="0,0,10,0">
            <i:Interaction.Behaviors>
              <behaviors:SelectAllOnFocusBehavior />
            </i:Interaction.Behaviors>
          </TextBox>
          <TextBox materialDesign:HintAssist.Hint="Category" 
                   materialDesign:HintAssist.IsFloating="True" 
                   Text="{Binding EditingCategory}" 
                   Grid.Column="3">
            <i:Interaction.Behaviors>
              <behaviors:SelectAllOnFocusBehavior />
            </i:Interaction.Behaviors>
          </TextBox>
          <ComboBox ItemsSource="{Binding Accounts}"
                    SelectedItem="{Binding Account}"
                    DisplayMemberPath="Name" 
                    Grid.Column="4" 
                    Margin="10,0"
                    MinWidth="80"
                    VerticalAlignment="Bottom"/>

          <Button Content="{materialDesign:PackIcon Kind=Delete}" 
                  Grid.Column="5" 
                  Style="{StaticResource MaterialDesignFlatButton}"
                  Command="{x:Static ApplicationCommands.Delete}"
                  CommandParameter="{Binding}"/>

          <Button Content="{materialDesign:PackIcon Kind=ContentSave}" 
                  Grid.Column="6" 
                  Style="{StaticResource MaterialDesignFlatButton}"
                  Command="{x:Static ApplicationCommands.Save}"
                  CommandParameter="{Binding}"/>
        </Grid>
      </GroupBox>

    </DataTemplate>
  </UserControl.Resources>

  <Grid Grid.IsSharedSizeScope="True">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition />
    </Grid.RowDefinitions>
    <Grid.CommandBindings>
      <CommandBinding Command="{x:Static ApplicationCommands.Open}" Executed="Open_Executed" />
      <CommandBinding Command="{x:Static ApplicationCommands.Properties}" Executed="Properties_Executed" />
      <CommandBinding Command="{x:Static ApplicationCommands.Save}" Executed="Save_Executed" />
      <CommandBinding Command="{x:Static ApplicationCommands.Delete}" Executed="Delete_Executed" CanExecute="Delete_CanExecute" />
      <CommandBinding Command="{x:Static ApplicationCommands.Replace}" Executed="Restore_Executed" CanExecute="Restore_CanExecute" />
      <CommandBinding Command="{x:Static ApplicationCommands.Copy}" Executed="Copy_Executed" />
    </Grid.CommandBindings>
    <Grid.InputBindings>
      <KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
    </Grid.InputBindings>

    <Grid Margin="0,10,0,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition SharedSizeGroup="Name"/>
        <ColumnDefinition SharedSizeGroup="Budget"/>
        <ColumnDefinition SharedSizeGroup="Balance"/>
        <ColumnDefinition SharedSizeGroup="Expesnses"/>
        <ColumnDefinition SharedSizeGroup="Allocations"/>
        <ColumnDefinition SharedSizeGroup="ThreeMonthAvg"/>
        <ColumnDefinition SharedSizeGroup="SixMonthAvg"/>
        <ColumnDefinition SharedSizeGroup="TwelveMonthAvg"/>
        <ColumnDefinition />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid.Resources>
        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
          <Setter Property="FontSize" Value="14" />
          <Setter Property="Margin" Value="10,0" />
        </Style>
      </Grid.Resources>
      <TextBlock Text="Name" VerticalAlignment="Bottom"/>
      <TextBlock Text="Budgetted Amount" Grid.Column="1" VerticalAlignment="Bottom"
                 Visibility="{Binding IsChecked, ElementName=ShowBudgettedAmountCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
      <TextBlock Text="Current Balance" Grid.Column="2" VerticalAlignment="Bottom"
                 Visibility="{Binding IsChecked, ElementName=ShowCurrentAmountCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
      <TextBlock Text="Monthly Expenses" Grid.Column="3" VerticalAlignment="Bottom"
                 Visibility="{Binding IsChecked, ElementName=ShowMonthlyExpensesCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
      <TextBlock Text="Monthly Allocations" Grid.Column="4" VerticalAlignment="Bottom"
                 Visibility="{Binding IsChecked, ElementName=ShowMonthlyAllocationsCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
      <TextBlock Text="3 Month Avg." Grid.Column="5" VerticalAlignment="Bottom"
                 Visibility="{Binding IsChecked, ElementName=ThreeMonthAverageCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
      <TextBlock Text="6 Month Avg." Grid.Column="6" VerticalAlignment="Bottom"
                 Visibility="{Binding IsChecked, ElementName=SixMonthAverageCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>
      <TextBlock Text="12 Month Avg." Grid.Column="7" VerticalAlignment="Bottom"
                 Visibility="{Binding IsChecked, ElementName=TwelveMonthAverageCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}"/>

      <StackPanel Orientation="Horizontal" Margin="0,0,10,0" Grid.Column="8" VerticalAlignment="Bottom">
        <TextBox Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}" 
                 materialDesign:HintAssist.Hint="Search"
                 Margin="5,0"
                 MinWidth="200">
          <TextBox.InputBindings>
            <KeyBinding Key="Return" Command="{Binding DoSearchCommand}"/>
          </TextBox.InputBindings>
        </TextBox>
        <CheckBox IsChecked="{Binding ShowAll}" Content="All" />
        <materialDesign:PopupBox StaysOpen="True">
          <StackPanel Margin="10">
            <CheckBox Content="Budgetted Amount" IsChecked="True" x:Name="ShowBudgettedAmountCheckBox"/>
            <CheckBox Content="Current Amount" IsChecked="True" x:Name="ShowCurrentAmountCheckBox"/>
            <CheckBox Content="Monthly Expenses" IsChecked="True" x:Name="ShowMonthlyExpensesCheckBox"/>
            <CheckBox Content="Monthly Allocations" IsChecked="True" x:Name="ShowMonthlyAllocationsCheckBox"/>
            <CheckBox Content="3 Month Average Expenses" x:Name="ThreeMonthAverageCheckBox"/>
            <CheckBox Content="6 Month Average Expenses" x:Name="SixMonthAverageCheckBox"/>
            <CheckBox Content="12 Month Average Expenses" x:Name="TwelveMonthAverageCheckBox"/>
          </StackPanel>
        </materialDesign:PopupBox>
      </StackPanel>
    </Grid>
    <Separator Grid.Row="1" VerticalAlignment="Bottom" Margin="0,10"/>

    <ListBox ItemsSource="{Binding ExpenseCategoriesView}" Grid.Row="2"
                 SelectionChanged="ListBox_SelectionChanged">
      <ListBox.ItemContainerStyle>
        <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
          <Setter Property="utilities:AttachedProperties.DoubleClickCommand" Value="{x:Static ApplicationCommands.Open}"/>
          <Setter Property="utilities:AttachedProperties.DoubleClickCommandParameter" Value="{Binding}"/>
          <Setter Property="ContextMenu">
            <Setter.Value>
              <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                <MenuItem Command="{x:Static ApplicationCommands.Copy}" CommandParameter="{Binding}"/>
                <Separator />
                <MenuItem Header="_Delete"
                          Command="{x:Static ApplicationCommands.Delete}"
                          CommandParameter="{Binding}" />
                <MenuItem Header="_Restore"
                          Command="{x:Static ApplicationCommands.Replace}"
                          CommandParameter="{Binding}" />
                <Separator />
                <MenuItem Header="_Edit"
                          Command="{x:Static ApplicationCommands.Properties}"
                          CommandParameter="{Binding}"/>
              </ContextMenu>
            </Setter.Value>
          </Setter>
          <Setter Property="ContentTemplate" Value="{StaticResource DefaultCategoryTemplate}" />

          <Style.Triggers>
            <DataTrigger Binding="{Binding IsHidden}" Value="True">
              <Setter Property="Opacity" Value="0.6" />
              <Setter Property="TextElement.FontStyle" Value="Italic" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding IsEditing}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="utilities:AttachedProperties.DoubleClickCommand" Value="{x:Null}"/>
              <Setter Property="HorizontalContentAlignment" Value="Stretch" />
              <Setter Property="ContentTemplate" Value="{StaticResource EditingCategoryTemplate}" />
            </MultiDataTrigger>
          </Style.Triggers>
        </Style>
      </ListBox.ItemContainerStyle>
      <ListBox.GroupStyle>
        <GroupStyle HidesIfEmpty="True">
          <GroupStyle.HeaderTemplate>
            <DataTemplate>
              <Grid Background="{DynamicResource PrimaryHueLightBrush}">
                <TextBlock Text="{Binding Name}" Margin="15,3,3,3"
                           Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"/>
              </Grid>
            </DataTemplate>
          </GroupStyle.HeaderTemplate>
        </GroupStyle>
      </ListBox.GroupStyle>
    </ListBox>
  </Grid>
</UserControl>
